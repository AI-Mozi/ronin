#
# Ronin - A decentralized repository for the storage and sharing of computer
# security advisories, exploits and payloads.
#
# Copyright (c) 2007 Hal Brodigan (postmodern at users.sourceforge.net)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

require 'platform'
require 'exploits/exploit'

module Ronin
  class Target

    # Targeted product version
    attr_reader :product_version

    # Targeted platform
    attr_reader :platform

    # Target comments
    attr_reader :comments

    def initialize(product_version,platform,comments="")
      @product_version = product_version
      @platform = platform
      @comments = comments
    end

  end

  class PlatformExploit < Exploit

    # Prefix string
    attr_accessor :prefix

    # Postfix string
    attr_accessor :postfix

    # Targets
    attr_accessor :targets

    def initialize(advisory=nil)
      @prefix = ""
      @postfix = ""
      @targets = []

      param(:target_index) {
	@desc = "default target index"
	@value = 0
      }
      param(:custom_target,"custom target")

      super(advisory)
    end

    def add_target(target)
      @targets << target
    end

    def target
      return custom_target if custom_target
      return @targets[target_index]
    end

  end
end
