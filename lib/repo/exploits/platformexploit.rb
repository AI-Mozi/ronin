#
# Ronin - A decentralized repository for the storage and sharing of computer
# security advisories, exploits and payloads.
#
# Copyright (c) 2007 Hal Brodigan (postmodern at users.sourceforge.net)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

require 'exploits/platformexploit'
require 'repo/exploits/exploit'

module Ronin
  module Repo
    class TargetContext

      include ObjectMetadata

      # Targeted product version
      attr_metadata :product_version

      # Targeted platform
      attr_metadata :platform

      # Target comments
      attr_metadata :comments

      def initialize(&block)
	# initialize target metadata
	metadata_set(:product_version,"")
	metadata_set(:platform,nil)
	metadata_set(:comments,"")

	instance_eval(&block)
      end

      def to_target
	Target.new(product_version,platform,comments)
      end

    end

    class PlatformExploitContext < ExploitContext

      # Name of object to load
      object_context :platform_exploit

      def initialize(name='')
	super(name)
      end

      def encapsulate
	PlatformExploit.new
      end

      protected

      def target(&block)
	object.targets << TargetContext.new(&block)
      end

    end
  end
end
