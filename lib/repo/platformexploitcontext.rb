#
# Ronin - A decentralized repository for the storage and sharing of computer
# security advisories, exploits and payloads.
#
# Copyright (c) 2007 Hal Brodigan (postmodern at users.sourceforge.net)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

require 'target'
require 'platformexploit'
require 'repo/exploitcontext'

module Ronin
  module Repo
    class PlatformExploitContext < ExploitContext

      # The platform exploit targets
      attr_reader :targets

      def initialize(path)
	super(path)

	@metadata['prefix'] = ""
	@metadata['postfix'] = ""

	@targets = []
      end

      def create_exploit
	@exploit = PlatformExploit.new(self.advisory)
	load_platformexploit(@exploit)
      end

      protected

      # Prefix of the platform exploit
      attr_metadata :prefix
      
      # Postfix of the platform exploit
      attr_metadata :postfix

      def target(product_version,platform,comments=nil)
	@targets << Target.new(product_version,platform,comments)
      end

      def load_platformexploit(exploit)
	load_exploit(exploit)

	exploit.prefix = self.prefix
	exploit.postfix = self.postfix

	exploit.targets = @targets
      end

    end

    # Object constructor for PlatformExploitContext
    attr_object :PlatformExploitContext
  end
end
